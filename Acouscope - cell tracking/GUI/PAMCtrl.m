function handles = PAMCtrl(handles)

octStatus = getappdata(0, 'octStatus');


%% Check if window was created and is open
if ishandle(getappdata(0, 'tabPAMHdl'))
    close(getappdata(0, 'tabPAMHdl'));
    calllib('octlib', 'setSLD', octStatus.Device, false);  
    setappdata(0, 'tabPAMHdl',[]);
    return;
end


%% main window
handles.hfigPAM = uipanel('Parent', handles.hfigM,...
                            'Title', 'PAM/Fluorescence Settings',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'Fontsize', 12, ...
                            'Position', [.02, .01, .45, .49]);  
%% Initialize Device



%check if OCT is initialized
initButnVal = calllib('octlib', 'isSLDAvailable', octStatus.Device);
         
handles.OCT.SLDSetBtn = uicontrol(... % 
                    'Parent', handles.hfigPAM,... 
                    'Units','normalized',...
                    'Fontsize',12,...
                    'Position',[0.82 .87 .13 .12],...
                    'String', 'SLD',...
                    'Style','togglebutton',...   
                    'callback', {@OCTSLDSet_Callback, handles});% 

handles.OCT.DevInitBtn = uicontrol(... % 
                    'Parent', handles.hfigPAM,... 
                    'Units','normalized',...
                    'Fontsize',12,...
                    'Position',[0.05 .87 .75 .12],...
                    'String', 'Initialize OCT Device',...
                    'Style','togglebutton',...
                    'Value', initButnVal,...
                    'callback', {@OCTDevInit_Callback, handles});%

%% Camera Live button       
handles.OCT.CamLiveBtn = uicontrol(... % List of available types of plot
                     'Parent', handles.hfigPAM,... 
                     'Units','normalized',...
                     'Fontsize',12,...
                     'Position',[0.05 .75 .9 .12],...
                     'String', 'Live View Camera',...
                    'Style','togglebutton');   
set(handles.OCT.CamLiveBtn, 'callback', {@OCTCamLiveBtn, handles});% 

%% B Scan parameters UI Controls
handles.PAM.PAMParms = uipanel('Parent', handles.hfigPAM,...
                            'Title', 'PAM Scan Parameters',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'Fontsize', 10, ...
                            'Position', [.01, .15, .98, .6]); 
                        
handles.PAM.ScanPatternLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Scan Pattern',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.02, .8, .3, .14]);
                       
handles.PAM.ScanPatternLb2 = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Free Position',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.67, .8, .23, .14]);

handles.PAM.ScanAxisLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Scan Angle (0-180 Deg)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.02, .65, .5, .14]);
                       
handles.PAM.CenterXLb = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'CenterX (mm)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.02, .51, .35, .14]);   
                        
handles.PAM.CenterYLb = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'CenterY (mm)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.5, .51, .35, .14]);  
               
handles.PAM.WScanRangeLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Width (mm)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.02, .38, .33, .14]);                        
                        
handles.PAM.HScanRangeLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Height (mm)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.5, .38, .35, .14]);                        
handles.PAM.WScanPtsLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Width (pixel)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.02, .25, .33, .14]);                     
                        
handles.PAM.HScanPtsLbl = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'text',...
                            'String', 'Height (pixel)',...
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.5, .25, .25, .14]);
                        
                       

angle = getappdata(0, 'ScanAngle');

handles.PAM.ScanAxisEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', angle,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.45, .7, .20, .12],...
                            'callback', {@setScanAngle_Callback});

CenterX = getappdata(0, 'centerX');
CenterXString = num2str(CenterX);
handles.PAM.CenterXEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', CenterXString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.30, .56, .15, .12],...
                            'callback', {@setCenterX_Callback});      

CenterY = getappdata(0, 'centerY');
CenterYString = num2str(CenterY);
handles.PAM.CenterYEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', CenterYString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.80, .56, .15, .12],...
                            'callback', {@setCenterY_Callback});                             


range = getappdata(0, 'ScanRange');
rangeString = num2str(range);
handles.PAM.WScanRangeEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', rangeString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.30, .42, .15, .12],...
                            'callback', {@setScanRange_Callback});
                        
points = getappdata(0, 'ScanPoints');
pointsString = num2str(points);  

handles.PAM.WScanPtsEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', pointsString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.30, .28, .15, .12],...
                            'callback', {@setScanPts_Callback});
                        

Hrange = getappdata(0, 'HScanRange');
HrangeString = num2str(Hrange);                        
handles.PAM.HScanRangeEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', HrangeString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'enable','off',...
                            'Position', [.8, .42, .15, .12],...
                            'callback', {@setHScanRange_Callback});
                        
rows = getappdata(0, 'ScanRows');
rowsString = num2str(rows);  
                     
handles.PAM.HScanPtsEdt = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'edit',...
                            'String', rowsString,...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'enable','off',...
                            'Position', [.8, .28, .15, .12],...
                            'callback', {@setScanRows_Callback}); 
                        

                        
%% Acquire BScan       
handles.PAM.getBScanBtn = uicontrol(... % List of available types of plot
                     'Parent', handles.PAM.PAMParms,... 
                     'Units','normalized',...
                     'Fontsize', 12, ...
                     'Position',[0.45 .01 .48 .25],...
                     'String', 'Acquire Image',...
                    'Style','pushbutton');   
set(handles.PAM.getBScanBtn, 'callback', {@getBScan_Callback, handles});



%% free scan, no acquisition
handles.PAM.freeScanBtn = uicontrol(... % List of available types of plot 
                     'Parent', handles.PAM.PAMParms,... 
                     'Units','normalized',...
                     'Position',[0.03 .03 .3 .20],...
                     'Fontsize', 12, ...
                     'String', 'Free Scan',...
                    'Style','togglebutton',...
                    'callback', {@freeScan_Callback, handles});   
% set(handles.PAM.freeScanBtn, 'callback', {@freeScan_Callback, handles});%


%% set Scan type: bscans (one file per row) vs volume (one file for the whole image)       
               
handles.PAM.setScanTypeBtn = uicontrol('Parent', handles.PAM.PAMParms,...
                         'string',{'A-Scan';'B-Scan';'C-Scan'},...
                         'Units','normalized',...
                         'Fontsize',9,...
                         'Fontweight', 'normal',...
                         'HorizontalAlignment', 'left',...
                         'position',[.3, .85 .35 .13],...  
                         'style','pop',...
                         'value',getappdata(0, 'patternType'),...
                          'Callback',{@setScanTypeBtn_Callback, handles}); 
                      
handles.PAM.setScanTypeBox = uicontrol('Parent', handles.PAM.PAMParms,...
                            'Style', 'checkbox',...                            
                            'Fontweight', 'bold',...
                            'Units', 'normalized',...
                            'HorizontalAlignment', 'left',...
                            'Position', [.93, .815, .1, .15],...
                            'value',getappdata(0, 'ScanType'),...
                          'Callback',{@setScanTypeBox_Callback, handles}); 


%% ringillumination LED intensity control
handles.PAM.RingLgtLbl = uicontrol(...,
                        'Parent', handles.hfigPAM,... 
                         'Units','normalized',...
                         'Fontsize',11,...
                         'Position',[0.01 .08 .9 .06],...
                         'Style','text',...
                         'String', 'Ring Illumination Intensity');

handles.PAM.RingLgtSldr = uicontrol(... % List of available types of plot
                         'Parent', handles.hfigPAM,... 
                         'Units','normalized',...
                         'Position',[0.05 .0 .9 .07],...
                         'Style','slider',...
                         'Value', getappdata(0, 'ringLightIntensity'),...
                         'Min', 0, ...
                         'Max', 100,...
                         'SliderStep', [.01, .1]);
set(handles.PAM.RingLgtSldr, 'callback', {@setRingLgt_Callback, handles});


end

%% OCT Device Init Callback
function OCTDevInit_Callback(src, evnt, handles)
    octStatus = getappdata(0, 'octStatus');
    
    if get(src, 'Value') == 1
        disp('Initializing OCT probe ...');
        if ~isempty(octStatus.Device) & octStatus.Device.isNull == 0
            disp('OCT already initialized')
        else
            disp('Initializing OCT...')
            octStatus.Device = calllib('octlib', 'initDevice')
             disp('4')
            octStatus.Probe = calllib('octlib', 'initProbe', octStatus.Device, 'C:\Program Files\Thorlabs\SpectralRadar\config\ProbeScientificLSM03.ini');%Probe
             disp('1')
            calllib('octlib', 'setProbeParameterInt', octStatus.Probe, 'Probe_ApodizationCycles', 0);
             disp('3')
            calllib('octlib', 'setProbeParameterFloat', octStatus.Probe, 'Probe_ExpectedScanRate_Hz',5500);
            calllib('octlib', 'setSLD', octStatus.Device, false);
             disp('2')
            calllib('octlib', 'moveScanner', octStatus.Device, octStatus.Probe, 'ScanAxis_X', 0);
            calllib('octlib', 'moveScanner', octStatus.Device, octStatus.Probe, 'ScanAxis_Y', 0);
            set(src, 'String', 'Close OCT Device');
        end
    elseif get(src, 'Value') == 0
        disp('Closing probe and device'); 
        calllib('octlib', 'closeProbe', octStatus.Probe);
        calllib('octlib', 'closeDevice', octStatus.Device);
        octStatus.Probe = [];
        octStatus.Device = [];
        set(handles.indicator.OCTStatus, 'String', 'SLD OFF', 'Backgroundcolor', [.5, .5, .5]);
        set(handles.OCT.SLDSetBtn, 'Value', 0);
        set(src, 'String', 'Initialize OCT Device');
    end
    setappdata(0, 'octStatus', octStatus);
end

%% OCT Probe set Galvo Axis Callback
function setScanAngle_Callback(src, event)
    angle= str2num(get(src,'String'));
    if angle<0 || angle > 180
        angle = 0;
        set(src, 'String', num2str(angle));
    end
    setappdata(0, 'ScanAngle', angle);  
end

%% OCT Probe set Galvo Scan Range Callback
function setScanRange_Callback(src, event)
    range = str2num(get(src, 'String'));
    if range > 10 || range < 0
        range = 1;
        set(src, 'String', '1');
    end
    
    setappdata(0, 'ScanRange', range)
end

%% OCT Probe set Galvo # of points per scan Callback
function setScanPts_Callback(src, event)
    points = double(str2num(get(src, 'String')));
    height = getappdata(0, 'ScanRows');
    if points > 4000
        errordlg('Max pixel per row should be less than 4000');
        points = 200;
    elseif points*height < getappdata(0, 'maxTotalPixCnt')
        errordlg('Minimum total pixel number should be larger than 160.');
        points = ceil(160/height);
    end
    set(src, 'String', num2str(points))
    setappdata(0, 'ScanPoints', points);
end

%% OCT Probe set Galvo Height Scan Range Callback
function setHScanRange_Callback(src, event)
    range = str2num(get(src, 'String'));
    if range > 10 || range < 0
        range = 1;
        set(src, 'String', '1');
    end
    
    setappdata(0, 'HScanRange', range);
end

%% OCT Probe set Galvo # of points per scan Callback
function setScanRows_Callback(src, event)
    height = double(str2num(get(src, 'String')));
    points = getappdata(0, 'ScanPoints');
    if height > 4000
        errordlg('Max pixel per row should be less than 4000');
        height = 200;
    elseif points*height < getappdata(0, 'minTotalPixCnt')
        errordlg('Minimum total pixel number should be larger than 160.');
        height = ceil(160/height);
    end
    set(src, 'String', num2str(height))
    setappdata(0, 'ScanRows', height);
end

function OCTSLDSet_Callback(src, event, handles)
    octStatus = getappdata(0, 'octStatus');
    if get(src, 'Value') == 1
        calllib('octlib', 'setSLD', octStatus.Device, true);
        set(handles.indicator.OCTStatus, 'String', 'SLD ON', 'Backgroundcolor', [.1, 1, .1]);
    else
        calllib('octlib', 'setSLD', octStatus.Device, false);
        set(handles.indicator.OCTStatus, 'String', 'SLD ON', 'Backgroundcolor', [.5, .5, .5]);
    end
end



function setRingLgt_Callback(src, event, handles)
    octStatus = getappdata(0, 'octStatus');
    value = get(src, 'Value');
    calllib('octlib', 'setOutputValueByName', octStatus.Device, 'ring light', value);
    setappdata(0,'ringLightIntensity', value); 
end

function setScanTypeBox_Callback(src, event, handles)
    value = get(src, 'Value');
    setappdata(0,'ScanType', value); 
    if value == 0
%         set(handles.PAM.HScanPtsEdt,'enable','on');
        setappdata(0, 'centerX', 0); %default scan center is 0
        setappdata(0, 'centerY', 0); %default scan center is 0
        set(handles.PAM.CenterXEdt,'string','0');
        set(handles.PAM.CenterYEdt,'string','0');
        set(handles.PAM.CenterXEdt,'enable','on');
        set(handles.PAM.CenterYEdt,'enable','on');
        if getappdata(0, 'patternType')== 3
            
        set(handles.PAM.HScanPtsEdt,'enable','on');
        set(handles.PAM.HScanRangeEdt,'enable','on');
        end
        setappdata(0,'Scanline',[]);
    else
        if getappdata(0, 'patternType')== 3
            
        set(handles.PAM.HScanPtsEdt,'enable','off');
        set(handles.PAM.HScanRangeEdt,'enable','off');
        end
        set(handles.PAM.CenterXEdt,'enable','off');
        set(handles.PAM.CenterYEdt,'enable','off');
    end
end

function setCenterX_Callback(src, event)
    CenterX = str2num(get(src, 'String'));
    if CenterX > 4.3 || CenterX < -4.3
        CenterX = 0;
        set(src, 'String', '0');
        errordlg('Out of scan area. -4.3<X<4.3.');
    end
    
    setappdata(0, 'centerX', CenterX);
end

function setCenterY_Callback(src, event)
    CenterY = str2num(get(src, 'String'));
    if CenterY > 5 || CenterY < -5
        CenterY = 0;
        set(src, 'String', '0');
        errordlg('Out of scan area. -5<Y<5.');
    end
    
    setappdata(0, 'centerY', CenterY);
end